/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Exchange, ExchangeInterface } from "../Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coin",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAdded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "coin",
    outputs: [
      {
        internalType: "contract ICoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ethToTokenSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ethToTokenSwapInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ethToTokenSwapOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ethToTokenTransferInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ethToTokenTransferOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethSold",
        type: "uint256",
      },
    ],
    name: "getEthToTokenInputPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    name: "getEthToTokenOutputPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
    ],
    name: "getTokenToEthInputPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
    ],
    name: "getTokenToEthInputPriceWithTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
    ],
    name: "getTokenToEthOutputPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
    ],
    name: "getTokenToEthOutputPriceWithTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liqudityGuard",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liqudityGuardDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_guard",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_denominator",
        type: "uint256",
      },
    ],
    name: "setLiqudityGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_taxFeeDenominator",
        type: "uint256",
      },
    ],
    name: "setTaxFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxFeeDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
    ],
    name: "tokenToEthSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minEth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "tokenToEthSwapInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "tokenToEthSwapOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minEth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "tokenToEthTransferInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "tokenToEthTransferOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405260056001556064600255600380556103e860045560405162001d9e38038062001d9e833981016040819052610038916100af565b6100413361005f565b6000805460ff60a01b191690556001600160a01b03166080526100df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c157600080fd5b81516001600160a01b03811681146100d857600080fd5b9392505050565b608051611c8e6200011060003960008181610280015281816105c90152818161187b01526119660152611c8e6000f3fe6080604052600436106101d15760003560e01c80638c4302ad116100f7578063afc75b7311610095578063d4e4841d11610064578063d4e4841d14610548578063efaa91b714610568578063f2fde38b1461057e578063f39b5b9b1461059e57600080fd5b8063afc75b73146104e0578063c1137e5614610500578063c552849014610508578063cd7724c31461052857600080fd5b806395e3c50b116100d157806395e3c50b146104625780639cb06eec14610482578063a071dcf4146104b7578063ad65d76d146104cd57600080fd5b80638c4302ad146104045780638da5cb5b1461042457806395b68fe71461044257600080fd5b80634796915c1161016f5780636b1d4db71161013e5780636b1d4db7146103a7578063715018a6146103ba5780637237e031146103cf5780638456cb59146103ef57600080fd5b80634796915c1461032757806359e94862146103475780635c975abb146103675780636a0bf6701461039157600080fd5b80631beb2615116101ab5780631beb2615146102ba5780632640f62c146102dc5780633bb77f9d146102fc5780633f4ba83a1461031257600080fd5b8063013efd8b146102285780630b5736381461025b57806311df99951461026e57600080fd5b366102235742337f7162984403f6c73c8639375d45a9187dfd04602231bd8e587c415718b5f7e5f9346102026105b1565b604080519283526020830191909152479082015260600160405180910390a3005b600080fd5b34801561023457600080fd5b506102486102433660046119d0565b610641565b6040519081526020015b60405180910390f35b610248610269366004611a11565b61068a565b34801561027a57600080fd5b506102a27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610252565b3480156102c657600080fd5b506102da6102d5366004611a4a565b6106ff565b005b3480156102e857600080fd5b506102486102f7366004611a67565b610738565b34801561030857600080fd5b5061024860025481565b34801561031e57600080fd5b506102da61079f565b34801561033357600080fd5b50610248610342366004611a67565b6107d3565b34801561035357600080fd5b50610248610362366004611a67565b610822565b34801561037357600080fd5b50600054600160a01b900460ff166040519015158152602001610252565b34801561039d57600080fd5b5061024860035481565b6102486103b5366004611a80565b61088c565b3480156103c657600080fd5b506102da6108c4565b3480156103db57600080fd5b506102486103ea366004611aa2565b6108f8565b3480156103fb57600080fd5b506102da610976565b34801561041057600080fd5b506102da61041f366004611a80565b6109a8565b34801561043057600080fd5b506000546001600160a01b03166102a2565b34801561044e57600080fd5b5061024861045d366004611a67565b610a27565b34801561046e57600080fd5b5061024861047d3660046119d0565b610a8a565b34801561048e57600080fd5b506104a261049d366004611a67565b610ac2565b60408051928352602083019190915201610252565b3480156104c357600080fd5b5061024860015481565b6102486104db366004611a11565b610b2e565b3480156104ec57600080fd5b506104a26104fb366004611a67565b610ba3565b610248610c06565b34801561051457600080fd5b506102da610523366004611a80565b610c3f565b34801561053457600080fd5b50610248610543366004611a67565b610d07565b34801561055457600080fd5b50610248610563366004611aa2565b610d65565b34801561057457600080fd5b5061024860045481565b34801561058a57600080fd5b506102da610599366004611a4a565b610dda565b6102486105ac366004611a80565b610e72565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190611ae3565b905090565b60008054600160a01b900460ff16156106755760405162461bcd60e51b815260040161066c90611afc565b60405180910390fd5b6106828484843333610eaa565b949350505050565b60008054600160a01b900460ff16156106b55760405162461bcd60e51b815260040161066c90611afc565b6001600160a01b03821630148015906106d657506001600160a01b03821615155b6106f25760405162461bcd60e51b815260040161066c90611b26565b6106828434853386611060565b6000546001600160a01b031633146107295760405162461bcd60e51b815260040161066c90611b51565b806001600160a01b0316ff5b50565b60008082116107815760405162461bcd60e51b81526020600482015260156024820152740657468426f75676874206d757374206265203e203605c1b604482015260640161066c565b600061078b6105b1565b90506107988382476111a7565b9392505050565b6000546001600160a01b031633146107c95760405162461bcd60e51b815260040161066c90611b51565b6107d1611250565b565b60008054600160a01b900460ff16156107fe5760405162461bcd60e51b815260040161066c90611afc565b60006108128361080c6105b1565b476112ed565b5090506107988382423333611322565b60008082116108735760405162461bcd60e51b815260206004820152601860248201527f746f6b656e73426f75676874206d757374206265203e20300000000000000000604482015260640161066c565b600061087d6105b1565b905060006106828447846111a7565b60008054600160a01b900460ff16156108b75760405162461bcd60e51b815260040161066c90611afc565b6107988334843333611060565b6000546001600160a01b031633146108ee5760405162461bcd60e51b815260040161066c90611b51565b6107d1600061145f565b60008054600160a01b900460ff16156109235760405162461bcd60e51b815260040161066c90611afc565b6001600160a01b038216301480159061094457506001600160a01b03821615155b6109605760405162461bcd60e51b815260040161066c90611b26565b61096d8585853386611322565b95945050505050565b6000546001600160a01b031633146109a05760405162461bcd60e51b815260040161066c90611b51565b6107d16114af565b6000546001600160a01b031633146109d25760405162461bcd60e51b815260040161066c90611b51565b60008111610a1c5760405162461bcd60e51b8152602060048201526017602482015276064656e6f6d696e61746f72206d757374206265203e203604c1b604482015260640161066c565b600391909155600455565b6000808211610a715760405162461bcd60e51b81526020600482015260166024820152750746f6b656e73536f6c64206d757374206265203e20360541b604482015260640161066c565b6000610a7b6105b1565b90506000610682848347611514565b60008054600160a01b900460ff1615610ab55760405162461bcd60e51b815260040161066c90611afc565b6106828484843333611322565b60008060008311610b0d5760405162461bcd60e51b81526020600482015260156024820152740657468426f75676874206d757374206265203e203605c1b604482015260640161066c565b6000610b176105b1565b9050610b248482476115bf565b9250925050915091565b60008054600160a01b900460ff1615610b595760405162461bcd60e51b815260040161066c90611afc565b6001600160a01b0382163014801590610b7a57506001600160a01b03821615155b610b965760405162461bcd60e51b815260040161066c90611b26565b61068234858533866115cf565b60008060008311610bef5760405162461bcd60e51b81526020600482015260166024820152750746f6b656e73536f6c64206d757374206265203e20360541b604482015260640161066c565b6000610bf96105b1565b9050610b248482476112ed565b60008054600160a01b900460ff1615610c315760405162461bcd60e51b815260040161066c90611afc565b61063c3460004233336115cf565b6000546001600160a01b03163314610c695760405162461bcd60e51b815260040161066c90611b51565b600f8210610cb25760405162461bcd60e51b81526020600482015260166024820152756d6178696d756d20746178206665652069732031352560501b604482015260640161066c565b60008111610cfc5760405162461bcd60e51b8152602060048201526017602482015276064656e6f6d696e61746f72206d757374206265203e203604c1b604482015260640161066c565b600191909155600255565b6000808211610d4e5760405162461bcd60e51b81526020600482015260136024820152720657468536f6c64206d757374206265203e203606c1b604482015260640161066c565b6000610d586105b1565b9050610798834783611514565b60008054600160a01b900460ff1615610d905760405162461bcd60e51b815260040161066c90611afc565b6001600160a01b0382163014801590610db157506001600160a01b03821615155b610dcd5760405162461bcd60e51b815260040161066c90611b26565b61096d8585853386610eaa565b6000546001600160a01b03163314610e045760405162461bcd60e51b815260040161066c90611b51565b6001600160a01b038116610e695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161066c565b6107358161145f565b60008054600160a01b900460ff1615610e9d5760405162461bcd60e51b815260040161066c90611afc565b61079834848433336115cf565b600042841015610ecc5760405162461bcd60e51b815260040161066c90611b86565b60008611610f155760405162461bcd60e51b81526020600482015260166024820152750626f7567687420657468206d757374206265203e20360541b604482015260640161066c565b60008511610f655760405162461bcd60e51b815260206004820152601d60248201527f6d617820626f7567687420746f6b656e73206d757374206265203e2030000000604482015260640161066c565b6000610f6f6105b1565b9050600080610f7f8984476115bf565b9150915081881015610fd35760405162461bcd60e51b815260206004820181905260248201527f6d617820626f7567687420746f6b656e73203e3d20746f6b656e7320736f6c64604482015260640161066c565b610fdd858a611725565b610ff086610feb8484611843565b61184f565b42856001600160a01b0316876001600160a01b03167f156f189818933420824a33bbb00381f62b4acd509c93f9e45e90de784e594b73858d6110306105b1565b6040805193845260208401929092529082015247606082015260800160405180910390a450979650505050505050565b6000428410156110825760405162461bcd60e51b815260040161066c90611b86565b600086116110d25760405162461bcd60e51b815260206004820152601960248201527f746f6b656e7320626f75676874206d757374206265203e203000000000000000604482015260640161066c565b6000851161111b5760405162461bcd60e51b815260206004820152601660248201527506d6178206f6620657468206d757374206265203e20360541b604482015260640161066c565b60006111256105b1565b9050600061113d88611137478a61192e565b846111a7565b9050600061114b888361192e565b9050801561115d5761115d8682611725565b611167858a61193a565b42856001600160a01b0316876001600160a01b03167f8a5254432535d4192429d2cc163283a57784eac274295fcda17cc659c1ee414c8c866110306105b1565b600080831180156111b85750600082115b6111f45760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081a5b9c1d5d609a1b604482015260640161066c565b60045460009061120e906112088688611995565b90611995565b9050600061122f6003546004546112259190611bc6565b611208868961192e565b905061124660016112408385611bdd565b90611843565b9695505050505050565b600054600160a01b900460ff166112a05760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161066c565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60008060006112fd868686611514565b9050600061130a826119a1565b9050611316828261192e565b97909650945050505050565b6000428410156113445760405162461bcd60e51b815260040161066c90611b86565b600086116113945760405162461bcd60e51b815260206004820152601760248201527f736f6c6420746f6b656e73206d757374206265203e2030000000000000000000604482015260640161066c565b600061139e6105b1565b90506000806113ae8984476112ed565b91509150878210156114025760405162461bcd60e51b815260206004820152601a60248201527f65746820626f75676874206d757374203e3d206d696e20657468000000000000604482015260640161066c565b61141585611410848461192e565b611725565b61141f868a61184f565b42856001600160a01b0316876001600160a01b03167f156f189818933420824a33bbb00381f62b4acd509c93f9e45e90de784e594b738c866110306105b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156114d95760405162461bcd60e51b815260040161066c90611afc565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112d03390565b600080831180156115255750600082115b6115615760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f56414c554560981b604482015260640161066c565b600061157d6003546004546115769190611bc6565b8690611995565b9050600061158b8285611995565b905060006115a8836112406004548961199590919063ffffffff16565b90506115b48183611bdd565b979650505050505050565b60008060006112fd8686866111a7565b6000428410156115f15760405162461bcd60e51b815260040161066c90611b86565b600086116116385760405162461bcd60e51b81526020600482015260146024820152730736f6c6420657468206d757374206265203e20360641b604482015260640161066c565b60006116426105b1565b9050600061165a88611654478261192e565b84611514565b9050868110156116ac5760405162461bcd60e51b815260206004820152601860248201527f62757920616d6f756e74206e6f74207361746973666965640000000000000000604482015260640161066c565b6116b6848261193a565b42846001600160a01b0316866001600160a01b03167f8a5254432535d4192429d2cc163283a57784eac274295fcda17cc659c1ee414c848c6116f66105b1565b6040805193845260208401929092529082015247606082015260800160405180910390a4979650505050505050565b804710156117755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161066c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146117c2576040519150601f19603f3d011682016040523d82523d6000602084013e6117c7565b606091505b505090508061183e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161066c565b505050565b60006107988284611bff565b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064015b6020604051808303816000875af11580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e99190611c17565b61192a5760405162461bcd60e51b815260206004820152601260248201527131b7bab632103737ba103a3930b739b332b960711b604482015260640161066c565b5050565b60006107988284611bc6565b6040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016118a6565b60006107988284611c39565b60006119be600154611208600254856119c490919063ffffffff16565b92915050565b60006107988284611bdd565b6000806000606084860312156119e557600080fd5b505081359360208301359350604090920135919050565b6001600160a01b038116811461073557600080fd5b600080600060608486031215611a2657600080fd5b83359250602084013591506040840135611a3f816119fc565b809150509250925092565b600060208284031215611a5c57600080fd5b8135610798816119fc565b600060208284031215611a7957600080fd5b5035919050565b60008060408385031215611a9357600080fd5b50508035926020909101359150565b60008060008060808587031215611ab857600080fd5b8435935060208501359250604085013591506060850135611ad8816119fc565b939692955090935050565b600060208284031215611af557600080fd5b5051919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601190820152701a5b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f191958591b1a5b994818dc9bdcdcd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611bd857611bd8611bb0565b500390565b600082611bfa57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611c1257611c12611bb0565b500190565b600060208284031215611c2957600080fd5b8151801515811461079857600080fd5b6000816000190483118215151615611c5357611c53611bb0565b50029056fea26469706673582212206a8cce38a8f960fe8b11e667c0c16bf3b98ff8e3fa7a30e148ec81d3028b83ee64736f6c634300080d0033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Exchange";
  }

  deploy(
    _coin: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Exchange> {
    return super.deploy(_coin, overrides || {}) as Promise<Exchange>;
  }
  getDeployTransaction(
    _coin: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coin, overrides || {});
  }
  attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }
  static readonly contractName: "Exchange";
  public readonly contractName: "Exchange";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
