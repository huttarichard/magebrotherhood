/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Promoter, PromoterInterface } from "../Promoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bhc",
        type: "uint256",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eth",
        type: "uint256",
      },
    ],
    name: "Rewarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_SHARES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MANAGER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SHARES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethRevenue",
        type: "uint256",
      },
    ],
    name: "addRevenue",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "ethRevenue",
        type: "uint256",
      },
    ],
    name: "addRevenueByCode",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kontrakt",
        type: "address",
      },
    ],
    name: "allowContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "coin",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchange",
    outputs: [
      {
        internalType: "contract IExchange",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
    ],
    name: "getAccountByCode",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "promoters",
    outputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "shares",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "revenue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "promotersbyCode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coin",
        type: "address",
      },
    ],
    name: "setCoinContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "setPromoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200260c3803806200260c833981016040819052620000349162000499565b6001805460ff1916905562000068600080516020620025cc833981519152600080516020620025ec833981519152620000b0565b62000083600080516020620025ec83398151915233620000fb565b6200009e600080516020620025cc83398151915233620000fb565b620000a9816200010b565b506200063e565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6200010782826200019e565b5050565b600080516020620025ec8339815191526200012781336200023e565b6001600160a01b038216620001755760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b50600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000107576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001075762000288816001600160a01b03166014620002d960201b620012ed1760201c565b6200029e836020620012ed620002d9821b17811c565b604051602001620002b1929190620004f7565b60408051601f198184030181529082905262461bcd60e51b82526200016c9160040162000570565b60606000620002ea836002620005bb565b620002f7906002620005dd565b6001600160401b03811115620003115762000311620005f8565b6040519080825280601f01601f1916602001820160405280156200033c576020820181803683370190505b509050600360fc1b816000815181106200035a576200035a6200060e565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200038c576200038c6200060e565b60200101906001600160f81b031916908160001a9053506000620003b2846002620005bb565b620003bf906001620005dd565b90505b600181111562000441576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110620003f757620003f76200060e565b1a60f81b8282815181106200041057620004106200060e565b60200101906001600160f81b031916908160001a90535060049490941c93620004398162000624565b9050620003c2565b508315620004925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016200016c565b9392505050565b600060208284031215620004ac57600080fd5b81516001600160a01b03811681146200049257600080fd5b60005b83811015620004e1578181015183820152602001620004c7565b83811115620004f1576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835162000531816017850160208801620004c4565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835162000564816028840160208801620004c4565b01602801949350505050565b602081526000825180602084015262000591816040850160208701620004c4565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620005d857620005d8620005a5565b500290565b60008219821115620005f357620005f3620005a5565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081620006365762000636620005a5565b506000190190565b611f7e806200064e6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80635c975abb116100de5780639aebd39411610097578063d2f7265a11610071578063d2f7265a146103b1578063d547741f146103c4578063f6bd02fa146103d7578063fcbc4cee146103ea57600080fd5b80639aebd394146103835780639dd39e3114610396578063a217fddf146103a957600080fd5b80635c975abb1461030f5780635e2a1a551461031a5780636e5abaad146103225780637aa1eb9a146103425780638456cb591461036857806391d148541461037057600080fd5b80632711b3d41161014b57806336568abe1161012557806336568abe146102c75780633e8ff57b146102da5780633f4ba83a146102f45780633ffbd47f146102fc57600080fd5b80632711b3d41461026b5780632a0acc6a1461029f5780632f2ff15d146102b457600080fd5b806301ffc9a714610193578063031297f2146101bb57806311df9995146101dc578063191655871461020c5780631b2df85014610221578063248a9ca314610248575b600080fd5b6101a66101a1366004611898565b6103fd565b60405190151581526020015b60405180910390f35b6101ce6101c93660046118d9565b610434565b6040519081526020016101b2565b6001546101f49061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b61021f61021a366004611903565b6104a9565b005b6101ce7faf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c81565b6101ce61025636600461191e565b60009081526020819052604090206001015490565b6101f4610279366004611a03565b80516020818301810180516004825292820191909301209152546001600160a01b031681565b6101ce600080516020611f2983398151915281565b61021f6102c2366004611a38565b61082b565b61021f6102d5366004611a38565b610856565b6102e2601481565b60405160ff90911681526020016101b2565b61021f6108d4565b61021f61030a366004611a64565b6108f8565b60015460ff166101a6565b6102e2600581565b610335610330366004611a03565b610b12565b6040516101b29190611b24565b610355610350366004611903565b610d4d565b6040516101b29796959493929190611ba2565b61021f610ea5565b6101a661037e366004611a38565b610ec6565b6101ce610391366004611bf8565b610eef565b61021f6103a4366004611c5e565b610f8d565b6101ce600081565b6002546101f4906001600160a01b031681565b61021f6103d2366004611a38565b6111fb565b61021f6103e5366004611903565b611221565b61021f6103f8366004611903565b611285565b60006001600160e01b03198216637965db0b60e01b148061042e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360009081526005602052604081205460ff166104985760405162461bcd60e51b815260206004820152601a60248201527f636f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064015b60405180910390fd5b6104a28383611489565b9392505050565b60015460ff16156104cc5760405162461bcd60e51b815260040161048f90611d42565b6001600160a01b0381166000908152600360209081526040808320815160e08101909252805460ff1615158252600181018054929391929184019161051090611d6c565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90611d6c565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b5050509183525050600282015460ff1660208201526003820180546040909201916105b390611d6c565b80601f01602080910402602001604051908101604052809291908181526020018280546105df90611d6c565b801561062c5780601f106106015761010080835404028352916020019161062c565b820191906000526020600020905b81548152906001019060200180831161060f57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481525050905060008160800151116106a15760405162461bcd60e51b81526020600482015260156024820152746e6f20726576656e756520746f2072656c6561736560581b604482015260640161048f565b438160c0015160026106b39190611dbc565b106107005760405162461bcd60e51b815260206004820152601760248201527f726577617264206973206e6f7420796574207265616479000000000000000000604482015260640161048f565b60025460a082015160405163cd7724c360e01b815260048101919091526000916001600160a01b03169063cd7724c390602401602060405180830381865afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190611dd4565b600154604051631f72642160e31b81526001600160a01b038681166004830152602482018490529293506101009091049091169063fb93210890604401600060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b50505050826001600160a01b03167f737c69225d647e5994eab1a6c301bf6d9232beb2759ae1e27a8966b4732bc4898260405161081e91815260200190565b60405180910390a2505050565b60008281526020819052604090206001015461084781336115b1565b6108518383611615565b505050565b6001600160a01b03811633146108c65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161048f565b6108d08282611699565b5050565b600080516020611f298339815191526108ed81336115b1565b6108f56116fe565b50565b60015460ff161561091b5760405162461bcd60e51b815260040161048f90611d42565b80518251811580159061092e5750603282105b6109695760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b604482015260640161048f565b6000811180156109795750601e82105b6109b45760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206e616d6560a01b604482015260640161048f565b60006001600160a01b03166004856040516109cf9190611ded565b908152604051908190036020019020546001600160a01b031614610a2b5760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b604482015260640161048f565b6040518060e00160405280600115158152602001848152602001600560ff1681526020018581526020016000815260200160008152602001600081525060036000610a733390565b6001600160a01b031681526020808201929092526040016000208251815460ff19169015151781558282015180519192610ab5926001850192909101906117ff565b50604082015160028201805460ff191660ff90921691909117905560608201518051610aeb9160038401916020909101906117ff565b506080820151600482015560a0820151600582015560c09091015160069091015550505050565b610b576040518060e0016040528060001515815260200160608152602001600060ff168152602001606081526020016000815260200160008152602001600081525090565b60036000600484604051610b6b9190611ded565b9081526040805160209281900383019020546001600160a01b0316835282820193909352908201600020825160e08101909352805460ff16151583526001810180549192840191610bbb90611d6c565b80601f0160208091040260200160405190810160405280929190818152602001828054610be790611d6c565b8015610c345780601f10610c0957610100808354040283529160200191610c34565b820191906000526020600020905b815481529060010190602001808311610c1757829003601f168201915b5050509183525050600282015460ff166020820152600382018054604090920191610c5e90611d6c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8a90611d6c565b8015610cd75780601f10610cac57610100808354040283529160200191610cd7565b820191906000526020600020905b815481529060010190602001808311610cba57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152505090508060000151610d485760405162461bcd60e51b81526020600482015260146024820152731c1c9bdb5bdd195c881a5cc8191a5cd8589b195960621b604482015260640161048f565b919050565b6003602052600090815260409020805460018201805460ff9092169291610d7390611d6c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9f90611d6c565b8015610dec5780601f10610dc157610100808354040283529160200191610dec565b820191906000526020600020905b815481529060010190602001808311610dcf57829003601f168201915b5050506002840154600385018054949560ff909216949193509150610e1090611d6c565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3c90611d6c565b8015610e895780601f10610e5e57610100808354040283529160200191610e89565b820191906000526020600020905b815481529060010190602001808311610e6c57829003601f168201915b5050505050908060040154908060050154908060060154905087565b600080516020611f29833981519152610ebe81336115b1565b6108f5611791565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3360009081526005602052604081205460ff16610f4e5760405162461bcd60e51b815260206004820152601a60248201527f636f6e7472616374206973206e6f742072656769737465726564000000000000604482015260640161048f565b6000600484604051610f609190611ded565b908152604051908190036020019020546001600160a01b03169050610f858184611489565b949350505050565b7faf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c610fb881336115b1565b6001600160a01b038316610fde5760405162461bcd60e51b815260040161048f90611e09565b601460ff16826040015160ff1611156110395760405162461bcd60e51b815260206004820152601e60248201527f646973636f756e742063616e206265206d6178696d756d206f66203230250000604482015260640161048f565b6001600160a01b0383166000908152600360208190526040822001805461105f90611d6c565b80601f016020809104026020016040519081016040528092919081815260200182805461108b90611d6c565b80156110d85780601f106110ad576101008083540402835291602001916110d8565b820191906000526020600020905b8154815290600101906020018083116110bb57829003601f168201915b50505050509050600081511115611117576004816040516110f99190611ded565b90815260405190819003602001902080546001600160a01b03191690555b6001600160a01b03841660009081526003602090815260409091208451815460ff191690151517815584820151805186936111599260018501929101906117ff565b50604082015160028201805460ff191660ff9092169190911790556060820151805161118f9160038401916020909101906117ff565b506080820151816004015560a0820151816005015560c0820151816006015590505083600484606001516040516111c69190611ded565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550505050565b60008281526020819052604090206001015461121781336115b1565b6108518383611699565b600080516020611f2983398151915261123a81336115b1565b6001600160a01b0382166112605760405162461bcd60e51b815260040161048f90611e09565b506001600160a01b03166000908152600560205260409020805460ff19166001179055565b600080516020611f2983398151915261129e81336115b1565b6001600160a01b0382166112c45760405162461bcd60e51b815260040161048f90611e09565b50600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b606060006112fc836002611e32565b611307906002611dbc565b67ffffffffffffffff81111561131f5761131f611937565b6040519080825280601f01601f191660200182016040528015611349576020820181803683370190505b509050600360fc1b8160008151811061136457611364611e51565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061139357611393611e51565b60200101906001600160f81b031916908160001a90535060006113b7846002611e32565b6113c2906001611dbc565b90505b600181111561143a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113f6576113f6611e51565b1a60f81b82828151811061140c5761140c611e51565b60200101906001600160f81b031916908160001a90535060049490941c9361143381611e67565b90506113c5565b5083156104a25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161048f565b60006001600160a01b0383166114b15760405162461bcd60e51b815260040161048f90611e09565b6001600160a01b0383166000908152600360205260409020805460ff166115115760405162461bcd60e51b81526020600482015260146024820152731c1c9bdb5bdd195c881a5cc8191a5cd8589b195960621b604482015260640161048f565b828160040160008282546115259190611dbc565b9091555050600281015460009061154a9060ff166115448660646117e7565b906117f3565b9050808260050160008282546115609190611dbc565b90915550504360068301556040518181526001600160a01b038616907fb3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe5639060200160405180910390a2949350505050565b6115bb8282610ec6565b6108d0576115d3816001600160a01b031660146112ed565b6115de8360206112ed565b6040516020016115ef929190611e7e565b60408051601f198184030181529082905262461bcd60e51b825261048f91600401611ef3565b61161f8282610ec6565b6108d0576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556116553390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6116a38282610ec6565b156108d0576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60015460ff166117475760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161048f565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60015460ff16156117b45760405162461bcd60e51b815260040161048f90611d42565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611774565b60006104a28284611f06565b60006104a28284611e32565b82805461180b90611d6c565b90600052602060002090601f01602090048101928261182d5760008555611873565b82601f1061184657805160ff1916838001178555611873565b82800160010185558215611873579182015b82811115611873578251825591602001919060010190611858565b5061187f929150611883565b5090565b5b8082111561187f5760008155600101611884565b6000602082840312156118aa57600080fd5b81356001600160e01b0319811681146104a257600080fd5b80356001600160a01b0381168114610d4857600080fd5b600080604083850312156118ec57600080fd5b6118f5836118c2565b946020939093013593505050565b60006020828403121561191557600080fd5b6104a2826118c2565b60006020828403121561193057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561197057611970611937565b60405290565b600082601f83011261198757600080fd5b813567ffffffffffffffff808211156119a2576119a2611937565b604051601f8301601f19908116603f011681019082821181831017156119ca576119ca611937565b816040528381528660208588010111156119e357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a1557600080fd5b813567ffffffffffffffff811115611a2c57600080fd5b610f8584828501611976565b60008060408385031215611a4b57600080fd5b82359150611a5b602084016118c2565b90509250929050565b60008060408385031215611a7757600080fd5b823567ffffffffffffffff80821115611a8f57600080fd5b611a9b86838701611976565b93506020850135915080821115611ab157600080fd5b50611abe85828601611976565b9150509250929050565b60005b83811015611ae3578181015183820152602001611acb565b83811115611af2576000848401525b50505050565b60008151808452611b10816020860160208601611ac8565b601f01601f19169290920160200192915050565b602081528151151560208201526000602083015160e06040840152611b4d610100840182611af8565b905060ff60408501511660608401526060840151601f19848303016080850152611b778282611af8565b915050608084015160a084015260a084015160c084015260c084015160e08401528091505092915050565b871515815260e060208201526000611bbd60e0830189611af8565b60ff881660408401528281036060840152611bd88188611af8565b6080840196909652505060a081019290925260c090910152949350505050565b60008060408385031215611c0b57600080fd5b823567ffffffffffffffff811115611c2257600080fd5b611c2e85828601611976565b95602094909401359450505050565b80358015158114610d4857600080fd5b803560ff81168114610d4857600080fd5b60008060408385031215611c7157600080fd5b611c7a836118c2565b9150602083013567ffffffffffffffff80821115611c9757600080fd5b9084019060e08287031215611cab57600080fd5b611cb361194d565b611cbc83611c3d565b8152602083013582811115611cd057600080fd5b611cdc88828601611976565b602083015250611cee60408401611c4d565b6040820152606083013582811115611d0557600080fd5b611d1188828601611976565b6060830152506080830135608082015260a083013560a082015260c083013560c08201528093505050509250929050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600181811c90821680611d8057607f821691505b602082108103611da057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611dcf57611dcf611da6565b500190565b600060208284031215611de657600080fd5b5051919050565b60008251611dff818460208701611ac8565b9190910192915050565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b6000816000190483118215151615611e4c57611e4c611da6565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611e7657611e76611da6565b506000190190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611eb6816017850160208801611ac8565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611ee7816028840160208801611ac8565b01602801949350505050565b6020815260006104a26020830184611af8565b600082611f2357634e487b7160e01b600052601260045260246000fd5b50049056fedf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42a26469706673582212200a30c75dc5364bfd0c03e1f1424954d581b0bef1ff2f7a18bcf274836666104b64736f6c634300080d0033af290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02cdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42";

type PromoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Promoter__factory extends ContractFactory {
  constructor(...args: PromoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Promoter";
  }

  deploy(
    _coin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Promoter> {
    return super.deploy(_coin, overrides || {}) as Promise<Promoter>;
  }
  getDeployTransaction(
    _coin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coin, overrides || {});
  }
  attach(address: string): Promoter {
    return super.attach(address) as Promoter;
  }
  connect(signer: Signer): Promoter__factory {
    return super.connect(signer) as Promoter__factory;
  }
  static readonly contractName: "Promoter";
  public readonly contractName: "Promoter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromoterInterface {
    return new utils.Interface(_abi) as PromoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Promoter {
    return new Contract(address, _abi, signerOrProvider) as Promoter;
  }
}
