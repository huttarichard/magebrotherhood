/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Promoter, PromoterInterface } from "../Promoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_exchange",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bhc",
        type: "uint256",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eth",
        type: "uint256",
      },
    ],
    name: "Rewarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_SHARES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MANAGER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SHARES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethRevenue",
        type: "uint256",
      },
    ],
    name: "addRevenue",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "ethRevenue",
        type: "uint256",
      },
    ],
    name: "addRevenueByCode",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kontrakt",
        type: "address",
      },
    ],
    name: "allowContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "coin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchange",
    outputs: [
      {
        internalType: "contract IExchange",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
    ],
    name: "getAccountByCode",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "promoters",
    outputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "shares",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "revenue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "promotersbyCode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coin",
        type: "address",
      },
    ],
    name: "setCoinContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchange",
        type: "address",
      },
    ],
    name: "setExchangeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "setPromoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027a4380380620027a483398101604081905262000034916200054b565b6001805460ff19169055620000686000805160206200276483398151915260008051602062002784833981519152620000bc565b62000083600080516020620027848339815191523362000107565b6200009e600080516020620027648339815191523362000107565b620000a98262000117565b620000b481620001aa565b5050620006fd565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b62000113828262000233565b5050565b60008051602062002784833981519152620001338133620002d3565b6001600160a01b038216620001815760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b50600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60008051602062002784833981519152620001c68133620002d3565b6001600160a01b038216620002105760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b604482015260640162000178565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000113576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200028f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000113576200031d816001600160a01b031660146200036e60201b620013a01760201c565b62000333836020620013a06200036e821b17811c565b60405160200162000346929190620005b6565b60408051601f198184030181529082905262461bcd60e51b825262000178916004016200062f565b606060006200037f8360026200067a565b6200038c9060026200069c565b6001600160401b03811115620003a657620003a6620006b7565b6040519080825280601f01601f191660200182016040528015620003d1576020820181803683370190505b509050600360fc1b81600081518110620003ef57620003ef620006cd565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620004215762000421620006cd565b60200101906001600160f81b031916908160001a9053506000620004478460026200067a565b620004549060016200069c565b90505b6001811115620004d6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106200048c576200048c620006cd565b1a60f81b828281518110620004a557620004a5620006cd565b60200101906001600160f81b031916908160001a90535060049490941c93620004ce81620006e3565b905062000457565b508315620005275760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000178565b9392505050565b80516001600160a01b03811681146200054657600080fd5b919050565b600080604083850312156200055f57600080fd5b6200056a836200052e565b91506200057a602084016200052e565b90509250929050565b60005b83811015620005a057818101518382015260200162000586565b83811115620005b0576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351620005f081601785016020880162000583565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516200062381602884016020880162000583565b01602801949350505050565b60208152600082518060208401526200065081604085016020870162000583565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562000697576200069762000664565b500290565b60008219821115620006b257620006b262000664565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081620006f557620006f562000664565b506000190190565b612057806200070d6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80635c975abb116100f95780639dd39e3111610097578063d547741f11610071578063d547741f146103df578063e5c42a3b146103f2578063f6bd02fa14610405578063fcbc4cee1461041857600080fd5b80639dd39e31146103b1578063a217fddf146103c4578063d2f7265a146103cc57600080fd5b80637aa1eb9a116100d35780637aa1eb9a1461035d5780638456cb591461038357806391d148541461038b5780639aebd3941461039e57600080fd5b80635c975abb1461032a5780635e2a1a55146103355780636e5abaad1461033d57600080fd5b80632711b3d41161016657806336568abe1161014057806336568abe146102e25780633e8ff57b146102f55780633f4ba83a1461030f5780633ffbd47f1461031757600080fd5b80632711b3d4146102865780632a0acc6a146102ba5780632f2ff15d146102cf57600080fd5b806301ffc9a7146101ae578063031297f2146101d657806311df9995146101f757806319165587146102275780631b2df8501461023c578063248a9ca314610263575b600080fd5b6101c16101bc36600461194b565b61042b565b60405190151581526020015b60405180910390f35b6101e96101e436600461198c565b610462565b6040519081526020016101cd565b60015461020f9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101cd565b61023a6102353660046119b6565b6104d7565b005b6101e97faf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c81565b6101e96102713660046119d1565b60009081526020819052604090206001015490565b61020f610294366004611ab6565b80516020818301810180516004825292820191909301209152546001600160a01b031681565b6101e960008051602061200283398151915281565b61023a6102dd366004611aeb565b610871565b61023a6102f0366004611aeb565b61089c565b6102fd601481565b60405160ff90911681526020016101cd565b61023a61091a565b61023a610325366004611b17565b61093e565b60015460ff166101c1565b6102fd600581565b61035061034b366004611ab6565b610b98565b6040516101cd9190611bd7565b61037061036b3660046119b6565b610dd3565b6040516101cd9796959493929190611c55565b61023a610f2b565b6101c1610399366004611aeb565b610f4c565b6101e96103ac366004611cab565b610f75565b61023a6103bf366004611d1a565b611013565b6101e9600081565b60025461020f906001600160a01b031681565b61023a6103ed366004611aeb565b61124c565b61023a6104003660046119b6565b611272565b61023a6104133660046119b6565b6112d4565b61023a6104263660046119b6565b611338565b60006001600160e01b03198216637965db0b60e01b148061045c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360009081526005602052604081205460ff166104c65760405162461bcd60e51b815260206004820152601a60248201527f636f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064015b60405180910390fd5b6104d0838361153c565b9392505050565b60015460ff16156104fa5760405162461bcd60e51b81526004016104bd90611dfe565b6001600160a01b0381166000908152600360209081526040808320815160e08101909252805460ff1615158252600181018054929391929184019161053e90611e28565b80601f016020809104026020016040519081016040528092919081815260200182805461056a90611e28565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b5050509183525050600282015460ff1660208201526003820180546040909201916105e190611e28565b80601f016020809104026020016040519081016040528092919081815260200182805461060d90611e28565b801561065a5780601f1061062f5761010080835404028352916020019161065a565b820191906000526020600020905b81548152906001019060200180831161063d57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481525050905060008160800151116106cf5760405162461bcd60e51b81526020600482015260156024820152746e6f20726576656e756520746f2072656c6561736560581b60448201526064016104bd565b438160c0015160026106e19190611e78565b1061072e5760405162461bcd60e51b815260206004820152601760248201527f726577617264206973206e6f742079657420726561647900000000000000000060448201526064016104bd565b60025460a082015160405163cd7724c360e01b815260048101919091526000916001600160a01b03169063cd7724c390602401602060405180830381865afa15801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a29190611e90565b6001546040516323b872dd60e01b81523060048201526001600160a01b03868116602483015260448201849052929350610100909104909116906323b872dd906064016020604051808303816000875af1158015610804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108289190611ea9565b50826001600160a01b03167f737c69225d647e5994eab1a6c301bf6d9232beb2759ae1e27a8966b4732bc4898260405161086491815260200190565b60405180910390a2505050565b60008281526020819052604090206001015461088d8133611664565b61089783836116c8565b505050565b6001600160a01b038116331461090c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104bd565b610916828261174c565b5050565b6000805160206120028339815191526109338133611664565b61093b6117b1565b50565b60015460ff16156109615760405162461bcd60e51b81526004016104bd90611dfe565b8051825181158015906109745750603282105b6109af5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b60448201526064016104bd565b6000811180156109bf5750601e82105b6109fa5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206e616d6560a01b60448201526064016104bd565b60006001600160a01b0316600485604051610a159190611ec6565b908152604051908190036020019020546001600160a01b031614610a715760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b60448201526064016104bd565b6040518060e00160405280600115158152602001848152602001600560ff1681526020018581526020016000815260200160008152602001600081525060036000610ab93390565b6001600160a01b031681526020808201929092526040016000208251815460ff19169015151781558282015180519192610afb926001850192909101906118b2565b50604082015160028201805460ff191660ff90921691909117905560608201518051610b319160038401916020909101906118b2565b506080820151600482015560a0820151600582015560c09091015160069091015533600485604051610b639190611ec6565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550505050565b610bdd6040518060e0016040528060001515815260200160608152602001600060ff168152602001606081526020016000815260200160008152602001600081525090565b60036000600484604051610bf19190611ec6565b9081526040805160209281900383019020546001600160a01b0316835282820193909352908201600020825160e08101909352805460ff16151583526001810180549192840191610c4190611e28565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6d90611e28565b8015610cba5780601f10610c8f57610100808354040283529160200191610cba565b820191906000526020600020905b815481529060010190602001808311610c9d57829003601f168201915b5050509183525050600282015460ff166020820152600382018054604090920191610ce490611e28565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1090611e28565b8015610d5d5780601f10610d3257610100808354040283529160200191610d5d565b820191906000526020600020905b815481529060010190602001808311610d4057829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152505090508060000151610dce5760405162461bcd60e51b81526020600482015260146024820152731c1c9bdb5bdd195c881a5cc8191a5cd8589b195960621b60448201526064016104bd565b919050565b6003602052600090815260409020805460018201805460ff9092169291610df990611e28565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2590611e28565b8015610e725780601f10610e4757610100808354040283529160200191610e72565b820191906000526020600020905b815481529060010190602001808311610e5557829003601f168201915b5050506002840154600385018054949560ff909216949193509150610e9690611e28565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec290611e28565b8015610f0f5780601f10610ee457610100808354040283529160200191610f0f565b820191906000526020600020905b815481529060010190602001808311610ef257829003601f168201915b5050505050908060040154908060050154908060060154905087565b600080516020612002833981519152610f448133611664565b61093b611844565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3360009081526005602052604081205460ff16610fd45760405162461bcd60e51b815260206004820152601a60248201527f636f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064016104bd565b6000600484604051610fe69190611ec6565b908152604051908190036020019020546001600160a01b0316905061100b818461153c565b949350505050565b7faf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c61103e8133611664565b6001600160a01b0383166110645760405162461bcd60e51b81526004016104bd90611ee2565b601460ff16826040015160ff1611156110bf5760405162461bcd60e51b815260206004820152601e60248201527f646973636f756e742063616e206265206d6178696d756d206f6620323025000060448201526064016104bd565b6001600160a01b038316600090815260036020819052604082200180546110e590611e28565b80601f016020809104026020016040519081016040528092919081815260200182805461111190611e28565b801561115e5780601f106111335761010080835404028352916020019161115e565b820191906000526020600020905b81548152906001019060200180831161114157829003601f168201915b5050505050905060008151111561119d5760048160405161117f9190611ec6565b90815260405190819003602001902080546001600160a01b03191690555b6001600160a01b03841660009081526003602090815260409091208451815460ff191690151517815584820151805186936111df9260018501929101906118b2565b50604082015160028201805460ff191660ff909216919091179055606082015180516112159160038401916020909101906118b2565b506080820151816004015560a0820151816005015560c082015181600601559050508360048460600151604051610b639190611ec6565b6000828152602081905260409020600101546112688133611664565b610897838361174c565b60008051602061200283398151915261128b8133611664565b6001600160a01b0382166112b15760405162461bcd60e51b81526004016104bd90611ee2565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000805160206120028339815191526112ed8133611664565b6001600160a01b0382166113135760405162461bcd60e51b81526004016104bd90611ee2565b506001600160a01b03166000908152600560205260409020805460ff19166001179055565b6000805160206120028339815191526113518133611664565b6001600160a01b0382166113775760405162461bcd60e51b81526004016104bd90611ee2565b50600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b606060006113af836002611f0b565b6113ba906002611e78565b67ffffffffffffffff8111156113d2576113d26119ea565b6040519080825280601f01601f1916602001820160405280156113fc576020820181803683370190505b509050600360fc1b8160008151811061141757611417611f2a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061144657611446611f2a565b60200101906001600160f81b031916908160001a905350600061146a846002611f0b565b611475906001611e78565b90505b60018111156114ed576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106114a9576114a9611f2a565b1a60f81b8282815181106114bf576114bf611f2a565b60200101906001600160f81b031916908160001a90535060049490941c936114e681611f40565b9050611478565b5083156104d05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104bd565b60006001600160a01b0383166115645760405162461bcd60e51b81526004016104bd90611ee2565b6001600160a01b0383166000908152600360205260409020805460ff166115c45760405162461bcd60e51b81526020600482015260146024820152731c1c9bdb5bdd195c881a5cc8191a5cd8589b195960621b60448201526064016104bd565b828160040160008282546115d89190611e78565b909155505060028101546000906115fd9060ff166115f786606461189a565b906118a6565b9050808260050160008282546116139190611e78565b90915550504360068301556040518181526001600160a01b038616907fb3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe5639060200160405180910390a2949350505050565b61166e8282610f4c565b61091657611686816001600160a01b031660146113a0565b6116918360206113a0565b6040516020016116a2929190611f57565b60408051601f198184030181529082905262461bcd60e51b82526104bd91600401611fcc565b6116d28282610f4c565b610916576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556117083390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117568282610f4c565b15610916576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60015460ff166117fa5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104bd565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60015460ff16156118675760405162461bcd60e51b81526004016104bd90611dfe565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611827565b60006104d08284611fdf565b60006104d08284611f0b565b8280546118be90611e28565b90600052602060002090601f0160209004810192826118e05760008555611926565b82601f106118f957805160ff1916838001178555611926565b82800160010185558215611926579182015b8281111561192657825182559160200191906001019061190b565b50611932929150611936565b5090565b5b808211156119325760008155600101611937565b60006020828403121561195d57600080fd5b81356001600160e01b0319811681146104d057600080fd5b80356001600160a01b0381168114610dce57600080fd5b6000806040838503121561199f57600080fd5b6119a883611975565b946020939093013593505050565b6000602082840312156119c857600080fd5b6104d082611975565b6000602082840312156119e357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611a2357611a236119ea565b60405290565b600082601f830112611a3a57600080fd5b813567ffffffffffffffff80821115611a5557611a556119ea565b604051601f8301601f19908116603f01168101908282118183101715611a7d57611a7d6119ea565b81604052838152866020858801011115611a9657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611ac857600080fd5b813567ffffffffffffffff811115611adf57600080fd5b61100b84828501611a29565b60008060408385031215611afe57600080fd5b82359150611b0e60208401611975565b90509250929050565b60008060408385031215611b2a57600080fd5b823567ffffffffffffffff80821115611b4257600080fd5b611b4e86838701611a29565b93506020850135915080821115611b6457600080fd5b50611b7185828601611a29565b9150509250929050565b60005b83811015611b96578181015183820152602001611b7e565b83811115611ba5576000848401525b50505050565b60008151808452611bc3816020860160208601611b7b565b601f01601f19169290920160200192915050565b602081528151151560208201526000602083015160e06040840152611c00610100840182611bab565b905060ff60408501511660608401526060840151601f19848303016080850152611c2a8282611bab565b915050608084015160a084015260a084015160c084015260c084015160e08401528091505092915050565b871515815260e060208201526000611c7060e0830189611bab565b60ff881660408401528281036060840152611c8b8188611bab565b6080840196909652505060a081019290925260c090910152949350505050565b60008060408385031215611cbe57600080fd5b823567ffffffffffffffff811115611cd557600080fd5b611ce185828601611a29565b95602094909401359450505050565b801515811461093b57600080fd5b8035610dce81611cf0565b803560ff81168114610dce57600080fd5b60008060408385031215611d2d57600080fd5b611d3683611975565b9150602083013567ffffffffffffffff80821115611d5357600080fd5b9084019060e08287031215611d6757600080fd5b611d6f611a00565b611d7883611cfe565b8152602083013582811115611d8c57600080fd5b611d9888828601611a29565b602083015250611daa60408401611d09565b6040820152606083013582811115611dc157600080fd5b611dcd88828601611a29565b6060830152506080830135608082015260a083013560a082015260c083013560c08201528093505050509250929050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600181811c90821680611e3c57607f821691505b602082108103611e5c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e8b57611e8b611e62565b500190565b600060208284031215611ea257600080fd5b5051919050565b600060208284031215611ebb57600080fd5b81516104d081611cf0565b60008251611ed8818460208701611b7b565b9190910192915050565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b6000816000190483118215151615611f2557611f25611e62565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611f4f57611f4f611e62565b506000190190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611f8f816017850160208801611b7b565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611fc0816028840160208801611b7b565b01602801949350505050565b6020815260006104d06020830184611bab565b600082611ffc57634e487b7160e01b600052601260045260246000fd5b50049056fedf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42a2646970667358221220f3e9edb942a15d4e240dac13eca48dd72497784ecf3a450723b6a56507a64a7464736f6c634300080d0033af290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02cdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42";

type PromoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Promoter__factory extends ContractFactory {
  constructor(...args: PromoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Promoter";
  }

  deploy(
    _coin: string,
    _exchange: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Promoter> {
    return super.deploy(_coin, _exchange, overrides || {}) as Promise<Promoter>;
  }
  getDeployTransaction(
    _coin: string,
    _exchange: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coin, _exchange, overrides || {});
  }
  attach(address: string): Promoter {
    return super.attach(address) as Promoter;
  }
  connect(signer: Signer): Promoter__factory {
    return super.connect(signer) as Promoter__factory;
  }
  static readonly contractName: "Promoter";
  public readonly contractName: "Promoter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromoterInterface {
    return new utils.Interface(_abi) as PromoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Promoter {
    return new Contract(address, _abi, signerOrProvider) as Promoter;
  }
}
