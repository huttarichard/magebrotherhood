/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Promoter, PromoterInterface } from "../Promoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bhc",
        type: "uint256",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eth",
        type: "uint256",
      },
    ],
    name: "Rewarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_SHARES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MANAGER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SHARES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethRevenue",
        type: "uint256",
      },
    ],
    name: "addRevenue",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "ethRevenue",
        type: "uint256",
      },
    ],
    name: "addRevenueByCode",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kontrakt",
        type: "address",
      },
    ],
    name: "allowContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "coin",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchange",
    outputs: [
      {
        internalType: "contract IExchange",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
    ],
    name: "getAccountByCode",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "promoters",
    outputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "shares",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "revenue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "promotersbyCode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coin",
        type: "address",
      },
    ],
    name: "setCoinContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "promoter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "shares",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Promoter.Account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "setPromoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200261738038062002617833981016040819052620000349162000499565b6001805460ff1916905562000068600080516020620025d7833981519152600080516020620025f7833981519152620000b0565b62000083600080516020620025f783398151915233620000fb565b6200009e600080516020620025d783398151915233620000fb565b620000a9816200010b565b506200063e565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6200010782826200019e565b5050565b600080516020620025f78339815191526200012781336200023e565b6001600160a01b038216620001755760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b50600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000107576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001075762000288816001600160a01b03166014620002d960201b620012f81760201c565b6200029e836020620012f8620002d9821b17811c565b604051602001620002b1929190620004f7565b60408051601f198184030181529082905262461bcd60e51b82526200016c9160040162000570565b60606000620002ea836002620005bb565b620002f7906002620005dd565b6001600160401b03811115620003115762000311620005f8565b6040519080825280601f01601f1916602001820160405280156200033c576020820181803683370190505b509050600360fc1b816000815181106200035a576200035a6200060e565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200038c576200038c6200060e565b60200101906001600160f81b031916908160001a9053506000620003b2846002620005bb565b620003bf906001620005dd565b90505b600181111562000441576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110620003f757620003f76200060e565b1a60f81b8282815181106200041057620004106200060e565b60200101906001600160f81b031916908160001a90535060049490941c93620004398162000624565b9050620003c2565b508315620004925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016200016c565b9392505050565b600060208284031215620004ac57600080fd5b81516001600160a01b03811681146200049257600080fd5b60005b83811015620004e1578181015183820152602001620004c7565b83811115620004f1576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835162000531816017850160208801620004c4565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835162000564816028840160208801620004c4565b01602801949350505050565b602081526000825180602084015262000591816040850160208701620004c4565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620005d857620005d8620005a5565b500290565b60008219821115620005f357620005f3620005a5565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081620006365762000636620005a5565b506000190190565b611f89806200064e6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80635c975abb116100de5780639aebd39411610097578063d2f7265a11610071578063d2f7265a146103b1578063d547741f146103c4578063f6bd02fa146103d7578063fcbc4cee146103ea57600080fd5b80639aebd394146103835780639dd39e3114610396578063a217fddf146103a957600080fd5b80635c975abb1461030f5780635e2a1a551461031a5780636e5abaad146103225780637aa1eb9a146103425780638456cb591461036857806391d148541461037057600080fd5b80632711b3d41161014b57806336568abe1161012557806336568abe146102c75780633e8ff57b146102da5780633f4ba83a146102f45780633ffbd47f146102fc57600080fd5b80632711b3d41461026b5780632a0acc6a1461029f5780632f2ff15d146102b457600080fd5b806301ffc9a714610193578063031297f2146101bb57806311df9995146101dc578063191655871461020c5780631b2df85014610221578063248a9ca314610248575b600080fd5b6101a66101a13660046118a3565b6103fd565b60405190151581526020015b60405180910390f35b6101ce6101c93660046118e4565b610434565b6040519081526020016101b2565b6001546101f49061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b61021f61021a36600461190e565b6104a9565b005b6101ce7faf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c81565b6101ce610256366004611929565b60009081526020819052604090206001015490565b6101f4610279366004611a0e565b80516020818301810180516004825292820191909301209152546001600160a01b031681565b6101ce600080516020611f3483398151915281565b61021f6102c2366004611a43565b61082b565b61021f6102d5366004611a43565b610856565b6102e2601481565b60405160ff90911681526020016101b2565b61021f6108d4565b61021f61030a366004611a6f565b6108f8565b60015460ff166101a6565b6102e2600581565b610335610330366004611a0e565b610b52565b6040516101b29190611b2f565b61035561035036600461190e565b610d8d565b6040516101b29796959493929190611bad565b61021f610ee5565b6101a661037e366004611a43565b610f06565b6101ce610391366004611c03565b610f2f565b61021f6103a4366004611c69565b610fcd565b6101ce600081565b6002546101f4906001600160a01b031681565b61021f6103d2366004611a43565b611206565b61021f6103e536600461190e565b61122c565b61021f6103f836600461190e565b611290565b60006001600160e01b03198216637965db0b60e01b148061042e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360009081526005602052604081205460ff166104985760405162461bcd60e51b815260206004820152601a60248201527f636f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064015b60405180910390fd5b6104a28383611494565b9392505050565b60015460ff16156104cc5760405162461bcd60e51b815260040161048f90611d4d565b6001600160a01b0381166000908152600360209081526040808320815160e08101909252805460ff1615158252600181018054929391929184019161051090611d77565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90611d77565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b5050509183525050600282015460ff1660208201526003820180546040909201916105b390611d77565b80601f01602080910402602001604051908101604052809291908181526020018280546105df90611d77565b801561062c5780601f106106015761010080835404028352916020019161062c565b820191906000526020600020905b81548152906001019060200180831161060f57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481525050905060008160800151116106a15760405162461bcd60e51b81526020600482015260156024820152746e6f20726576656e756520746f2072656c6561736560581b604482015260640161048f565b438160c0015160026106b39190611dc7565b106107005760405162461bcd60e51b815260206004820152601760248201527f726577617264206973206e6f7420796574207265616479000000000000000000604482015260640161048f565b60025460a082015160405163cd7724c360e01b815260048101919091526000916001600160a01b03169063cd7724c390602401602060405180830381865afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190611ddf565b600154604051631f72642160e31b81526001600160a01b038681166004830152602482018490529293506101009091049091169063fb93210890604401600060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b50505050826001600160a01b03167f737c69225d647e5994eab1a6c301bf6d9232beb2759ae1e27a8966b4732bc4898260405161081e91815260200190565b60405180910390a2505050565b60008281526020819052604090206001015461084781336115bc565b6108518383611620565b505050565b6001600160a01b03811633146108c65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161048f565b6108d082826116a4565b5050565b600080516020611f348339815191526108ed81336115bc565b6108f5611709565b50565b60015460ff161561091b5760405162461bcd60e51b815260040161048f90611d4d565b80518251811580159061092e5750603282105b6109695760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b604482015260640161048f565b6000811180156109795750601e82105b6109b45760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206e616d6560a01b604482015260640161048f565b60006001600160a01b03166004856040516109cf9190611df8565b908152604051908190036020019020546001600160a01b031614610a2b5760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b604482015260640161048f565b6040518060e00160405280600115158152602001848152602001600560ff1681526020018581526020016000815260200160008152602001600081525060036000610a733390565b6001600160a01b031681526020808201929092526040016000208251815460ff19169015151781558282015180519192610ab59260018501929091019061180a565b50604082015160028201805460ff191660ff90921691909117905560608201518051610aeb91600384019160209091019061180a565b506080820151600482015560a0820151600582015560c09091015160069091015533600485604051610b1d9190611df8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550505050565b610b976040518060e0016040528060001515815260200160608152602001600060ff168152602001606081526020016000815260200160008152602001600081525090565b60036000600484604051610bab9190611df8565b9081526040805160209281900383019020546001600160a01b0316835282820193909352908201600020825160e08101909352805460ff16151583526001810180549192840191610bfb90611d77565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2790611d77565b8015610c745780601f10610c4957610100808354040283529160200191610c74565b820191906000526020600020905b815481529060010190602001808311610c5757829003601f168201915b5050509183525050600282015460ff166020820152600382018054604090920191610c9e90611d77565b80601f0160208091040260200160405190810160405280929190818152602001828054610cca90611d77565b8015610d175780601f10610cec57610100808354040283529160200191610d17565b820191906000526020600020905b815481529060010190602001808311610cfa57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152505090508060000151610d885760405162461bcd60e51b81526020600482015260146024820152731c1c9bdb5bdd195c881a5cc8191a5cd8589b195960621b604482015260640161048f565b919050565b6003602052600090815260409020805460018201805460ff9092169291610db390611d77565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddf90611d77565b8015610e2c5780601f10610e0157610100808354040283529160200191610e2c565b820191906000526020600020905b815481529060010190602001808311610e0f57829003601f168201915b5050506002840154600385018054949560ff909216949193509150610e5090611d77565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7c90611d77565b8015610ec95780601f10610e9e57610100808354040283529160200191610ec9565b820191906000526020600020905b815481529060010190602001808311610eac57829003601f168201915b5050505050908060040154908060050154908060060154905087565b600080516020611f34833981519152610efe81336115bc565b6108f561179c565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3360009081526005602052604081205460ff16610f8e5760405162461bcd60e51b815260206004820152601a60248201527f636f6e7472616374206973206e6f742072656769737465726564000000000000604482015260640161048f565b6000600484604051610fa09190611df8565b908152604051908190036020019020546001600160a01b03169050610fc58184611494565b949350505050565b7faf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c610ff881336115bc565b6001600160a01b03831661101e5760405162461bcd60e51b815260040161048f90611e14565b601460ff16826040015160ff1611156110795760405162461bcd60e51b815260206004820152601e60248201527f646973636f756e742063616e206265206d6178696d756d206f66203230250000604482015260640161048f565b6001600160a01b0383166000908152600360208190526040822001805461109f90611d77565b80601f01602080910402602001604051908101604052809291908181526020018280546110cb90611d77565b80156111185780601f106110ed57610100808354040283529160200191611118565b820191906000526020600020905b8154815290600101906020018083116110fb57829003601f168201915b50505050509050600081511115611157576004816040516111399190611df8565b90815260405190819003602001902080546001600160a01b03191690555b6001600160a01b03841660009081526003602090815260409091208451815460ff1916901515178155848201518051869361119992600185019291019061180a565b50604082015160028201805460ff191660ff909216919091179055606082015180516111cf91600384019160209091019061180a565b506080820151816004015560a0820151816005015560c082015181600601559050508360048460600151604051610b1d9190611df8565b60008281526020819052604090206001015461122281336115bc565b61085183836116a4565b600080516020611f3483398151915261124581336115bc565b6001600160a01b03821661126b5760405162461bcd60e51b815260040161048f90611e14565b506001600160a01b03166000908152600560205260409020805460ff19166001179055565b600080516020611f348339815191526112a981336115bc565b6001600160a01b0382166112cf5760405162461bcd60e51b815260040161048f90611e14565b50600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60606000611307836002611e3d565b611312906002611dc7565b67ffffffffffffffff81111561132a5761132a611942565b6040519080825280601f01601f191660200182016040528015611354576020820181803683370190505b509050600360fc1b8160008151811061136f5761136f611e5c565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061139e5761139e611e5c565b60200101906001600160f81b031916908160001a90535060006113c2846002611e3d565b6113cd906001611dc7565b90505b6001811115611445576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061140157611401611e5c565b1a60f81b82828151811061141757611417611e5c565b60200101906001600160f81b031916908160001a90535060049490941c9361143e81611e72565b90506113d0565b5083156104a25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161048f565b60006001600160a01b0383166114bc5760405162461bcd60e51b815260040161048f90611e14565b6001600160a01b0383166000908152600360205260409020805460ff1661151c5760405162461bcd60e51b81526020600482015260146024820152731c1c9bdb5bdd195c881a5cc8191a5cd8589b195960621b604482015260640161048f565b828160040160008282546115309190611dc7565b909155505060028101546000906115559060ff1661154f8660646117f2565b906117fe565b90508082600501600082825461156b9190611dc7565b90915550504360068301556040518181526001600160a01b038616907fb3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe5639060200160405180910390a2949350505050565b6115c68282610f06565b6108d0576115de816001600160a01b031660146112f8565b6115e98360206112f8565b6040516020016115fa929190611e89565b60408051601f198184030181529082905262461bcd60e51b825261048f91600401611efe565b61162a8282610f06565b6108d0576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556116603390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6116ae8282610f06565b156108d0576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60015460ff166117525760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161048f565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60015460ff16156117bf5760405162461bcd60e51b815260040161048f90611d4d565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361177f565b60006104a28284611f11565b60006104a28284611e3d565b82805461181690611d77565b90600052602060002090601f016020900481019282611838576000855561187e565b82601f1061185157805160ff191683800117855561187e565b8280016001018555821561187e579182015b8281111561187e578251825591602001919060010190611863565b5061188a92915061188e565b5090565b5b8082111561188a576000815560010161188f565b6000602082840312156118b557600080fd5b81356001600160e01b0319811681146104a257600080fd5b80356001600160a01b0381168114610d8857600080fd5b600080604083850312156118f757600080fd5b611900836118cd565b946020939093013593505050565b60006020828403121561192057600080fd5b6104a2826118cd565b60006020828403121561193b57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561197b5761197b611942565b60405290565b600082601f83011261199257600080fd5b813567ffffffffffffffff808211156119ad576119ad611942565b604051601f8301601f19908116603f011681019082821181831017156119d5576119d5611942565b816040528381528660208588010111156119ee57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a2057600080fd5b813567ffffffffffffffff811115611a3757600080fd5b610fc584828501611981565b60008060408385031215611a5657600080fd5b82359150611a66602084016118cd565b90509250929050565b60008060408385031215611a8257600080fd5b823567ffffffffffffffff80821115611a9a57600080fd5b611aa686838701611981565b93506020850135915080821115611abc57600080fd5b50611ac985828601611981565b9150509250929050565b60005b83811015611aee578181015183820152602001611ad6565b83811115611afd576000848401525b50505050565b60008151808452611b1b816020860160208601611ad3565b601f01601f19169290920160200192915050565b602081528151151560208201526000602083015160e06040840152611b58610100840182611b03565b905060ff60408501511660608401526060840151601f19848303016080850152611b828282611b03565b915050608084015160a084015260a084015160c084015260c084015160e08401528091505092915050565b871515815260e060208201526000611bc860e0830189611b03565b60ff881660408401528281036060840152611be38188611b03565b6080840196909652505060a081019290925260c090910152949350505050565b60008060408385031215611c1657600080fd5b823567ffffffffffffffff811115611c2d57600080fd5b611c3985828601611981565b95602094909401359450505050565b80358015158114610d8857600080fd5b803560ff81168114610d8857600080fd5b60008060408385031215611c7c57600080fd5b611c85836118cd565b9150602083013567ffffffffffffffff80821115611ca257600080fd5b9084019060e08287031215611cb657600080fd5b611cbe611958565b611cc783611c48565b8152602083013582811115611cdb57600080fd5b611ce788828601611981565b602083015250611cf960408401611c58565b6040820152606083013582811115611d1057600080fd5b611d1c88828601611981565b6060830152506080830135608082015260a083013560a082015260c083013560c08201528093505050509250929050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600181811c90821680611d8b57607f821691505b602082108103611dab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611dda57611dda611db1565b500190565b600060208284031215611df157600080fd5b5051919050565b60008251611e0a818460208701611ad3565b9190910192915050565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b6000816000190483118215151615611e5757611e57611db1565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611e8157611e81611db1565b506000190190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611ec1816017850160208801611ad3565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611ef2816028840160208801611ad3565b01602801949350505050565b6020815260006104a26020830184611b03565b600082611f2e57634e487b7160e01b600052601260045260246000fd5b50049056fedf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42a2646970667358221220926772bc6e2563343dbbde0ae4ffab56976cb9c6e99f154367ff3ddb45e9b21164736f6c634300080d0033af290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02cdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42";

type PromoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Promoter__factory extends ContractFactory {
  constructor(...args: PromoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Promoter";
  }

  deploy(
    _coin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Promoter> {
    return super.deploy(_coin, overrides || {}) as Promise<Promoter>;
  }
  getDeployTransaction(
    _coin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coin, overrides || {});
  }
  attach(address: string): Promoter {
    return super.attach(address) as Promoter;
  }
  connect(signer: Signer): Promoter__factory {
    return super.connect(signer) as Promoter__factory;
  }
  static readonly contractName: "Promoter";
  public readonly contractName: "Promoter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromoterInterface {
    return new utils.Interface(_abi) as PromoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Promoter {
    return new Contract(address, _abi, signerOrProvider) as Promoter;
  }
}
